Xsq <- chisq.test(SoxN)
Xsq
SoxN <- as.table(rbind(c(296,(492+16+9+11+293+46+5+66+13+30+242+247+509+1455)), c(532,(877+53+24+19+457+111+5+132+13+40+501+456+1061+2633)), c(485,(792+43+20+14+436+94+11+98+6+29+395+385+840+2143))))
dimnames(SoxN) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("4-species", "others"))
Xsq <- chisq.test(SoxN)
Xsq
Xsq$expected
Xsq$observed
Xsq$residuals
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
Xsq <- chisq.test(D1)
Xsq
Xsq$residuals
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
Xsq <- chisq.test(SoxN1)
Xsq
Xsq$residuals
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
DDhssq
Ddhssq
Ddhssq$residuals
SoxNdhssq
SoxNdhssq$residuals
summary(D_msp$turnover_rate)
summary(D_my$turnover_rate)
summary(D_mp$turnover_rate)
summary(D_yp$turnover_rate)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
View(D_Dunique)
drv <- dbDriver(RPostgreSQL)
drv <- dbDriver(PostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="sox_db")
D_common_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_common where tfsite.id=D_common.tfsite_id")
summary(D_common_turnover)
D_dunique_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_Dunique where tfsite.id=D_Dunique.tfsite_id")
D_soxnunique_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_SoxNunique where tfsite.id=D_SoxNunique.tfsite_id")
summary(D_dunique_turnover)
summary(D_soxnunique_turnover)
boxplot(D_common_turnover, D_dunique_turnover, D_soxnunique_turnover, notch=TRUE)
hist(D_common_turnover)
View(D_dunique_turnover)
boxplot(D_common_turnover)
boxplot(D_dunique_turnover)
D_common_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_common where tfsite.id=D_common.tfsite_idand turnover_rate >= 0")
D_common_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_common where tfsite.id=D_common.tfsite_i and tfsite.turnover_rate >= 0")
D_common_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_common where tfsite.id=D_common.tfsite_id and tfsite.turnover_rate >= 0")
View(D_common_turnover)
hist(D_common_turnover)
hist(D_common_turnover$turnover_rate)
hist(D_dunique_turnover$turnover_rate)
hist(D_common_turnover$turnover_rate)
hist(D_soxnunique_turnover$turnover_rate)
wilcox.test(D_common_turnover$turnover_rate, D_dunique_turnover$turnover_rate)
D_turn<- as.table(rbind(c(619,41,47,6), c(1047,52,97,5), c(1089,64,64,6)))
dimnames(D) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("0", "1/6", "1/4", "2/6"))
Dsq <- chisq.test(D)
Dsq
Dsq$observed
Dsq$expected
Dsq$residuals
D_turn<- as.table(rbind(c(619,41,47,6), c(1047,52,97,5), c(1089,64,64,6)))
dimnames(D_turn) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("0", "1/6", "1/4", "2/6"))
Dsq <- chisq.test(D_turn)
Ds
Dsq
Dsq$expected
Dsq$observed
Dsq$residuals
??chisquare
Dsq <- chisq.test(D_turn, simulate.p.value=TRUE)
Dsq
SoxN_turn<- as.table(rbind(c(1081,66,112,18), c(1866,136,243,18), c(1713,106,192,17)))
dimnames(SoxN_turn) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("0", "1/6", "1/4", "2/6"))
SoxNsq <- chisq.test(SoxN_turn)
SoxNsq
SoxNsq$observed
SoxNsq$expected
SoxNsq$residuals
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
sink("chisq_results.txt")
Dsq
Ds$residuals
Dsq$residuals
SoxNsq
SoxNsq$residuals
D1sq
D1sq$residuals
SoxN1sq
SoxN1sq$residuals
Ddhssq
Ddhssq$residuals
SoxNdhssq
SoxNdhssq$residuals
sink()
??barplot
barplot(c(261/1815,269/1815,183/1815,1102/1815))
??barplot
?matrix
?barplot
?matrix
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
barplot(Dichaete_matrix)
barplot(Dichaete_matrix, beside=TRUE)
?barplot
?brewer
??Brewer
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
??brewer
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, YlOrRd))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "YlOrRd"))
display.brewer.all()
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Paired"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Dark"))
display.brewer.all()
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set2"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set3"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Dark2"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set3"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites")
?legend
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend=c("Dichaete only", "SoxN only", "Common"))
?legend
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend=c("Dichaete only", "SoxN only", "Common"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend(1, 0.5, c("Dichaete only", "SoxN only", "Common")))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites")
legend(1, 0.5, c("Dichaete only", "SoxN only", "Common"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend=c("Dichaete only", "SoxN only", "Common"))
?barplot
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(1, 0.5))
?barplot
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = "topleft"))
)
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = "topleft")))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 1, y=0.5)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 1.5, y=0.5)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.5)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=2)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=1)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.5)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "YlOrRd"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
??brewere
display.brewer.all()
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Spectral"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
newpal <- brewer.pal(6, "Spectral")
display.brewer.newpal()
newpal
barplot(Dichaete_matrix, beside=TRUE, col=newpal, ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[0-3], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[0], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[1], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[1-3], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[1,3], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[1:3], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
barplot(SoxN_matrix, beside=TRUE, col=newpal[4:6], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x=5, y=0.6)))
barplot(SoxN_matrix, beside=TRUE, col=newpal[6:4], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x=5, y=0.6)))
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
boxplot(D_transcomp, beside=TRUE, col=newpal, ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal, ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1:3], ylab="Proportion of total sites")
newpal <- brewer.pal(4, "Spectral")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
newpal
newpal <- brewer.pal(3, "Spectral")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
display.brewer.all()
newpal <- brewer.pal(2, "YlOrRd")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1][3], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1,3, ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1,3], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal, ylab="Proportion of total sites")
newpal <- brewer.pal(4, "Spectral")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites", legend.text=c("Transcompensation", "No transcompensation"), args.legend=list(x=5, y=0.6)))
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites", legend.text=c("Transcompensation", "No transcompensation"), args.legend=list(x=5, y=0.6))
barplot(nrow(D_msyp), nrow(D_3species), nrow(D_2species), nrow(D_1species))
?barplot
sites <- c(nrow(D_msyp), nrow(D_3species), nrow(D_species), nrow(D_1species))
sites <- c(nrow(D_msyp), nrow(D_3species), nrow(D_2species), nrow(D_1species))
barplot(sites, beside=TRUE)
?barplot
sites <- c(nrow(D_1species), nrow(D_2species), nrow(D_3species), nrow(D_msyp))
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites")
??brewer
display.brewer.all()
library("RColorBrewer")
display.brewer.all()
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites", col=brewer.pal(4, "BuPu"))
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites", col=brewer.pal(4, "YlOrRd"))
sites <- c(nrow(SoxN_1species), nrow(SoxN_2species), nrow(SoxN_3species), nrow(SoxN_mysp))
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites", col=brewer.pal(4, "YlBuGn"))
display.brewer.all()
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites", col=brewer.pal(4, "YlGnBu"))
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of SoxN sites", col=brewer.pal(4, "YlGnBu"))
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="sox_db")
D_overlap <- dbReadTable(con, "D_overlap")
D_overlap <- dbReadTable(con, "d_overlap")
View(D_overlap)
D_proximal <- dbReadTable(con, "d_proximal")
D_distal <- dbReadTable(con, "d_distal")
SoxN_overlap <- dbReadTable(con, "soxn_overlap")
SoxN_proximal <- dbReadTable(con, "soxn_proximal")
SoxN_distal <- dbReadTable(con, "soxn_distal")
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1, notch=TRUE)
wilcox.test(D_overlap$wscore1, D_proximal$wscore1)
wilcox.test(D_proximal$wscore1, D_distal$wscore1)
boxplot(SoxN_overlap$wscore1, SoxN_proximal$wscore1, SoxN_distal$wscore1)
boxplot(SoxN_overlap$wscore1, SoxN_proximal$wscore1, SoxN_distal$wscore1, notch=TRUE)
wilcox.test(SoxN_proximal$wscore1, SoxN_overlap$wscore1)
wilcox.test(SoxN_proximal$wscore1, SoxN_distal$wscore1)
D_overlap <- dbReadTable(con, "D_overlap")
D_overlap <- dbReadTable(con, "d_overlap")
D_proximal <- dbReadTable(con, "d_proximal")
D_distal <- dbReadTable(con, "d_distal")
SoxN_overlap <- dbReadTable(con, "soxn_overlap")
SoxN_proximal <- dbReadTable(con, "soxn_proximal")
SoxN_distal <- dbReadTable(con, "soxn_distal")
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1, notch=TRUE)
wilcox.test(D_proximal$wscore, D_overlap$wscore)
wilcox.test(D_proximal$wscore1, D_overlap$wscore1)
wilcox.test(D_proximal$wscore1, D_distal$wscore1)
boxplot(SoxN_overlap$wscore1, SoxN_proximal$wscore1, SoxN_distal$wscore1, notch=TRUE)
wilcox.test(SoxN_proximal$wscore1, SoxN_distal$wscore1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscor1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1, notch=TRUE)
wilcox.test(D_proximal$wscore1, D_overlap$wscore1)
boxplot(D_overlap$wscore2, D_proximal$wscore2, D_distal$wscore2, notch=TRUE)
boxplot(D_overlap$wscore2, D_proximal$wscore2, D_distal$wscore2)
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
View(D_overlap_4sp)
D_overlap_3sp <- c(D_overlap_msy, D_overlap_msp, D_overlap_myp, D_overlap_syp)
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
fix(D_overlap_3sp)
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
View(D_overlap_p)
View(D_overlap_y)
View(D_overlap_s)
View(D_overlap_m)
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
View(D_overlap)
D_prox_4sp <- dbGetQuery(con, "select distinct dm_id from D_proximal, D_msyp where D_proximal.id1=D_msyp.dm_id OR D_proximal.id2=D_msyp.dm_id")
D_homotypic <- as.table(rbind(c(nrow(D_overlap_4sp), D_overlap_3sp, D_overlap_2sp, D_overlap_1sp), c(nrow(D_prox_4sp), D_prox_3sp, D_prox_2sp, D_prox_1sp), c(nrow(D_dist_4sp), D_dist_3sp, D_dist_2sp, D_dist_1sp)))
D_prox_4sp <- dbGetQuery(con, "select distinct dm_id from D_proximal, D_msyp where D_proximal.id1=D_msyp.dm_id OR D_proximal.id2=D_msyp.dm_id")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="sox_db")
D_prox_4sp <- dbGetQuery(con, "select distinct dm_id from D_proximal, D_msyp where D_proximal.id1=D_msyp.dm_id OR D_proximal.id2=D_msyp.dm_id")
D_prox_msy <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_msy where D_proximal.id1=D_msy.d1_id OR D_proximal.id2=D_msy.d1_id")
D_prox_msp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_msp where D_proximal.id1=D_msp.d1_id OR D_proximal.id2=D_msp.d1_id")
D_prox_myp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_myp where D_proximal.id1=D_myp.d1_id OR D_proximal.id2=D_myp.d1_id")
D_prox_syp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_syp where D_proximal.id1=D_syp.d1_id OR D_proximal.id2=D_syp.d1_id")
D_prox_3sp <- nrow(D_prox_msy) + nrow(D_prox_msp) + nrow(D_prox_myp) + nrow(D_prox_syp)
D_prox_ms <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_ms where D_proximal.id1=D_ms.d1_id OR D_proximal.id2=D_ms.d1_id")
D_prox_my <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_my where D_proximal.id1=D_my.d1_id OR D_proximal.id2=D_my.d1_id")
D_overlap_s <- dbGetQuery(con, "select distinct d1_id from D_overlap, D_s where D_overlap.id1=D_s.d1_id OR D_overlap.id2=D_s.d1_id")
D_prox_mp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_mp where D_proximal.id1=D_mp.d1_id OR D_proximal.id2=D_mp.d1_id")
D_prox_sy <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_sy where D_proximal.id1=D_sy.d1_id OR D_proximal.id2=D_sy.d1_id")
D_prox_sp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_sp where D_proximal.id1=D_sp.d1_id OR D_proximal.id2=D_sp.d1_id")
D_prox_yp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_yp where D_proximal.id1=D_yp.d1_id OR D_proximal.id2=D_yp.d1_id")
D_prox_2sp <- nrow(D_prox_ms) + nrow(D_prox_my) + nrow(D_prox_mp) + nrow(D_prox_sy) + nrow(D_prox_sp) + nrow(D_prox_yp)
D_prox_m <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_m where D_proximal.id1=D_m.d1_id OR D_proximal.id2=D_m.d1_id")
D_prox_s <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_s where D_proximal.id1=D_s.d1_id OR D_proximal.id2=D_s.d1_id")
D_prox_y <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_y where D_proximal.id1=D_y.d1_id OR D_proximal.id2=D_y.d1_id")
D_prox_p <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_p where D_proximal.id1=D_p.d1_id OR D_proximal.id2=D_p.d1_id")
D_prox_1sp <- nrow(D_prox_m) + nrow(D_prox_s) + nrow(D_prox_y) + nrow(D_prox_p)
D_homotypic <- as.table(rbind(c(nrow(D_overlap_4sp), D_overlap_3sp, D_overlap_2sp, D_overlap_1sp), c(nrow(D_prox_4sp), D_prox_3sp, D_prox_2sp, D_prox_1sp), c(nrow(D_dist_4sp), D_dist_3sp, D_dist_2sp, D_dist_1sp)))
d
D_dist_4sp <- dbGetQuery(con, "select distinct dm_id from D_distal, D_msyp where D_distal.id1=D_msyp.dm_id OR D_distal.id2=D_msyp.dm_id")
View(D_1species)
View(D_2species)
View(D_3species)
D_dist_3sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_3species where D_dista.id1=D_3species.d1_id")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="sox_db")
D_dist_3sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_3species where D_dista.id1=D_3species.d1_id")
D_dist_3sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_3species where D_distal.id1=D_3species.d1_id")
View(D_distal)
D_distal <- dbReadTable(con, "d_distal")
SoxN_distal <- dbReadTable(con, "soxn_distal")
D_dist_4sp <- dbGetQuery(con, "select distinct dm_id from D_distal, D_msyp where D_distal.id1=D_msyp.dm_id")
D_dist_3sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_3species where D_distal.id1=D_3species.d1_id")
D_dist_2sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_2species where D_distal.id1=D_2species.d1_id")
D_dist_1sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_1species where D_distal.id1=D_1species.d1_id")
D_homotypic <- as.table(rbind(c(nrow(D_overlap_4sp), D_overlap_3sp, D_overlap_2sp, D_overlap_1sp), c(nrow(D_prox_4sp), D_prox_3sp, D_prox_2sp, D_prox_1sp), c(nrow(D_dist_4sp), nrow(D_dist_3sp), nrow(D_dist_2sp), nrow(D_dist_1sp)))
dimnames(D_homotypic) <- list(position=c("Overlap", "Proximal", "Distal"),
D_homotypic <- as.table(rbind(c(nrow(D_overlap_4sp), D_overlap_3sp, D_overlap_2sp, D_overlap_1sp), c(nrow(D_prox_4sp), D_prox_3sp, D_prox_2sp, D_prox_1sp), c(nrow(D_dist_4sp), nrow(D_dist_3sp), nrow(D_dist_2sp), nrow(D_dist_1sp))))
dimnames(D_homotypic) <- list(position=c("Overlap", "Proximal", "Distal"),
cons=c("1 species", "2 species", "3 species", "4 species"))
args(chisq)
??chisq
chisq.test(D_homotypic)
D_homotypic_test <- chisq.test(D_homotypic)
D_homotypic_test$expected
D_homotypic_test$observed
D_homotypic_test$residuals
drv <- dbDriver("PostgreSQL")
con <-dbConnect(drv, dbname="sox_db")
D_het_Kr_overlap_4sp <- dbGetQuery(con, "select distinct dm_id from d_msyp, d_het_kr_overlap where dm_id = id1")
source('~/utilities/play-1.2.7/sox_sites/analysis/D_heterotypic_by_TF.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/SoxN_heterotypic_by_TF.R')
D_het_vnd <- as.table(rbind(c(77,11,9,8), c(112,16,31,20), c(3459,595,965,965)))
dimnames(D_het_vnd) <- list(position=c("Overlap", "Proximal", "Distal"),
cons=c("1 species", "2 species", "3 species", "4 species"))
D_het_Kr <- as.table(rbind(c(358,61,100,52), c(377,74,108,126), c(3459,595,965,965)))
dimnames(D_het_Kr) <- list(position=c("Overlap", "Proximal", "Distal"),
cons=c("1 species", "2 species", "3 species", "4 species"))
SoxN_het_vnd <- as.table(rbind(c(156,24,26,10), c(264,37,53,21), c(7032,1130,1575,1046)))
dimnames(SoxN_het_vnd) <- list(position=c("Overlap", "Proximal", "Distal"),
cons=c("1 species", "2 species", "3 species", "4 species"))
SoxN_het_Kr <- as.table(rbind(c(2615,522,510,131), c(843,179,207,106), c(7032,1130,1575,1046)))
dimnames(SoxN_het_Kr) <- list(position=c("Overlap", "Proximal", "Distal"),
cons=c("1 species", "2 species", "3 species", "4 species"))
sink("chisq_heterotypic_byTF.txt")
D_het_vnd_test <- chisq.test(D_het_vnd)
D_het_vnd
D_het_vnd$observed
sink()
setwd("~/utilities/play-1.2.7/sox_sites/analysis")
D_het_vnd_test
D_het_Kr_test <- chisq.test(D_het_Kr)
SoxN_het_vnd_test <- chisq.test(SoxN_het_vnd)
SoxN_het_Kr_test <- chisq.test(SoxN_het_Kr)
sink("chisq_heterotypic_byTF.txt")
D_het_vnd_test
D_het_vnd_test$observed
D_het_vnd_test$expected
D_het_vnd_test$residuals
D_het_Kr_test
D_het_Kr_test$observed
D_het_Kr_test$expected
D_het_Kr_test$residuals
SoxN_het_vnd_test
SoxN_het_vnd_test$observed
SoxN_het_vnd_test$expected
SoxN_het_vnd_test$residuals
SoxN_het_Kr_test
SoxN_het_Kr_test$observed
SoxN_het_Kr_test$expected
SoxN_het_Kr_test$residuals
sink()
D_vnd <- matrix(data = c(77/105,11/105,9/105,8/105, 112/179,16/179,31/179,20/179, 3459/5984,595/5984,965/5984,965/5984), nrow=3, ncol=4, byrow=TRUE,
dimnames = list(c("Overlap", "Proximal", "Distal"),
c("1 species", "2 species", "3 species", "4 species")))
D_Kr <- matrix(data = c(377/571,61/571,100/571,52/571, 377/685,74/685,108/685,126/685, 3459/5984,595/5984,965/5984,965/5984), nrow=3, ncol=4, byrow=TRUE,
dimnames = list(c("Overlap", "Proximal", "Distal"),
c("1 species", "2 species", "3 species", "4 species")))
SoxN_vnd <- matrix(data = c(156/216,24,216,26/216,10/216, 264/375,37/375,53/375,21/375, 7032/10783,1130/10783,1575/10783,1046/10783), nrow=3, ncol=4, byrow=TRUE,
dimnames = list(c("Overlap", "Proximal", "Distal"),
c("1 species", "2 species", "3 species", "4 species")))
SoxN_vnd <- matrix(data = c(156/216,24/216,26/216,10/216, 264/375,37/375,53/375,21/375, 7032/10783,1130/10783,1575/10783,1046/10783), nrow=3, ncol=4, byrow=TRUE,
dimnames = list(c("Overlap", "Proximal", "Distal"),
c("1 species", "2 species", "3 species", "4 species")))
SoxN_Kr <- matrix(data = c(2615/3778,522/3778,510/3778,131/5778, 843/1335,179/1335,207/1335,106/1335, 7032/10783,1130/10783,1575/10783,1046/10783), nrow=3, ncol=4, byrow=TRUE,
dimnames = list(c("Overlap", "Proximal", "Distal"),
c("1 species", "2 species", "3 species", "4 species")))
barplot(D_vnd, beside=TRUE, col=mypal, ylab="Proportion of total sites", legend.text=c("Overlapping", "Proximal", "Distal"))
library(RColorBrewer)
redpal <- brewer.pal(3, "YlOrRd")
bluepal <- brewer.pal(3, "YlGnBu")
mypal <- redpal[3:1]
barplot(D_vnd, beside=TRUE, col=mypal, ylab="Proportion of total sites", legend.text=c("Overlapping", "Proximal", "Distal"))
barplot(D_Kr, beside=TRUE, col=mypal, ylab="Proportion of total sites", legend.text=c("Overlapping", "Proximal", "Distal"))
mypal <- bluepal[3:1]
barplot(SoxN_vnd, beside=TRUE, col=mypal, ylab="Proportion of total sites", legend.text=c("Overlapping", "Proximal", "Distal"))
barplot(SoxN_Kr, beside=TRUE, col=mypal, ylab="Proportion of total sites", legend.text=c("Overlapping", "Proximal", "Distal"))
fix(D_homotypic)
SoxN_homotypic <- as.table(rbind(c(nrow(SoxN_overlap_1sp), nrow(SoxN_overlap_2sp), nrow(SoxN_overlap_3sp), nrow(SoxN_overlap_4sp)), c(nrow(SoxN_prox_1sp), nrow(SoxN_prox_2sp), nrow(SoxN_prox_3sp), nrow(SoxN_prox_4sp)), c(nrow(SoxN_dist_1sp), nrow(SoxN_dist_2sp), nrow(SoxN_dist_3sp), nrow(SoxN_dist_4sp))))
SoxN_overlap_4sp <- dbGetQuery(con, "select distinct dm_id from SoxN_overlap, SoxN_msyp where SoxN_overlap.id1=SoxN_msyp.dm_id OR SoxN_overlap.id2=SoxN_msyp.dm_id")
source('~/utilities/play-1.2.7/sox_sites/analysis/SoxN_homotypic_clustering_conservation.R')
e
SoxN_heterotypic <- as.table(rbind(c(2748,542,536,141), c(1087,213,259,126), c(7032,1130,1575,1046)))
SoxN_proximal <- as.table(rbind(c(658,116,224,144), c(551,98,157,69), c(1087,213,259,126)))
dimnames(SoxN_proximal) <- list(type=c("Hom", "Het Sox", "Het other"),
const=c("1 species", "2 species", "3 species", "4 species"))
SoxN_prox_test <- chisq.test(SoxN_proximal)
SoxN_prox_test
SoxN_prox_test$expected
SoxN_prox_test$observed
SoxN_prox_test$residuals
SoxN_proximal_2 <- as.table(rbind(c(658,116,224,144), c(551,98,157,69), c(264,37,53,21), c(551,98,157,69)))
dimnames(SoxN_proximal_2) <- list(type=c("Hom", "Het Sox", "Het vnd", "Het Kr"),
const=c("1 species", "2 species", "3 species", "4 species"))
SoxN_prox_test2 <- chisq.test(SoxN_proximal_2)
SoxN_prox_test2
SoxN_prox_test2$observed
SoxN_proximal_2 <- as.table(rbind(c(658,116,224,144), c(551,98,157,69), c(264,37,53,21), c(843,179,207,106)))
dimnames(SoxN_proximal_2) <- list(type=c("Hom", "Het Sox", "Het vnd", "Het Kr"),
const=c("1 species", "2 species", "3 species", "4 species"))
SoxN_prox_test2 <- chisq.test(SoxN_proximal_2)
SoxN_prox_test2
SoxN_prox_test2$observed
SoxN_prox_test2$expected
SoxN_prox_test2$residuals
fix(D_homotypic)
D_proximal <- as.table(rbind(c(184,40,79,81), c(426,85,133,139), c(112,16,31,20), c(377,74,108,126)))
dimnames(D_proximal) <- list(type=c("Hom", "Het Sox", "Het vnd", "Het Kr"),
const=c("1 species", "2 species", "3 species", "4 species"))
D_prox_test <- chisq.test(D_proximal)
D_prox_test
D_prox_test$observed
D_prox_test$expected
D_prox_test$residuals
D_proximal_2 <- as.table(rbind(c(184,40,79,81), c(426,85,133,139), c(483,89,138,144)))
dimnames(D_proximal_2) <- <- list(type=c("Hom", "Het Sox", "Het other"),
D_proximal_2 <- as.table(rbind(c(184,40,79,81), c(426,85,133,139), c(483,89,138,144)))
dimnames(D_proximal_2) <- list(type=c("Hom", "Het Sox", "Het other"),
const=c("1 species", "2 species", "3 species", "4 species"))
D_prox_test2 <- chisq.test(D_proximal_2)
D_prox_test1
D_prox_test2
D_prox_test2$observed
D_prox_test2$expected
D_prox_test2$residuals
sink("chisq_proximal_sites.txt")
SoxN_prox_test2
SoxN_prox_test2$observed
SoxN_prox_test2$expected
SoxN_prox_test2$residuals
D_prox_test
D_prox_test$observed
D_prox_test$expected
D_prox_test$residuals
sink()
SoxN_prox <- matrix(data = c(658/1142,116/1142,224/1142,144/1142, 551/875,98/875,157/875,69/875, 264/375,37/375,53/375,21/375, 843/1335,179/1335,207/1335,106/1335), nrow=4, ncol=4, byrow=TRUE,
dimnames = list(c("Homotypic", "Het Sox", "Het vnd", "Het Kr"),
c("1 species", "2 species", "3 species", "4 species")))
barplot(SoxN_prox, beside=TRUE, col=mypal, ylab="Proportion of total proximal sites", legend.text=c("Homotypic", "D", "vnd", "Kr"))
bluepal=brewer.pal(4, "YlGnBu")
mypal=bluepal[4:1]
barplot(SoxN_prox, beside=TRUE, col=mypal, ylab="Proportion of total proximal sites", legend.text=c("Homotypic", "D", "vnd", "Kr"))
D_prox <- matrix(data= c(184/384,40/384,79/384,81/384, 426/783,85/783,133/783,139/783, 112/179,16/179,31/179,20/179, 377/685,74/685,108/685,126/685), nrow=4, ncol=4, byrow=TRUE,
dimnames = list(c("Homotypic", "Het Sox", "Het vnd", "Het Kr"),
c("1 species", "2 species", "3 species", "4 species")))
redpal <- brewer.pal(4, "YlOrRd")
mypal <- redpal[4:1]
barplot(D_prox, beside=TRUE, col=mypal, ylab="Proportion of total proximal sites", legend.text=c("Homotypic", "SoxN", "vnd", "Kr"))
D_overlap <- as.table(rbind(c(24,6,9,20), c(262,58,70,38), c(358,61,100,52), c(358,61,100,52)))
dimnames(D_overlap) <- list(type=c("Hom", "Het Sox", "Het vnd", "Het Kr"),
const=c("1 species", "2 species", "3 species", "4 species"))
D_overlap_test <- chisq.test(D_overlap)
D_overlap_test
D_overlap_test$observed
D_overlap_test$expected
D_overlap_test$residuals
SoxN_overlap <- as.table(rbind(c(1665,331,365,139), c(293,64,64,21), c(156,24,26,10), c(2615,522,510,131)))
dimnames(SoxN_overlap) <- list(type=c("Hom", "Het Sox", "Het vnd", "Het Kr"),
const=c("1 species", "2 species", "3 species", "4 species"))
SoxN_overlap_test <- chisq.test(SoxN_overlap)
SoxN_overlap_test
SoxN_overlap_test$observed
SoxN_overlap_test$expected
SoxN_overlap_test$residuals
sink("chisq_overlap_sites.txt")
D_overlap_test
D_overlap_test$observed
D_overlap_test$expected
D_overlap_test$residuals
SoxN_overlap_test
SoxN_overlap_test$observed
SoxN_overlap_test$expected
SoxN_overlap_test$residuals
sink()
d_overlap_4sp <- dbGetQuery(con, "select distinct dm_id from d_overlap, d_msyp where d_overlap.id1=d_msyp.dm_id OR d_overlap.id2=d_msyp.dm_id")
d_overlap_3sp <- dbGetQuery(con, "select distinct d1_id from d_overlap, d_3species where d_overlap.id1=d_3species.d1_id OR d_overlap.id2=d_3species.d1_id")
View(D_overlap_4sp)
View(D_msyp)
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
View(D_msyp)
D_4species_sequence <- D_msyp$dm_sequence
D_4species_sequence
library(Biostrings)
strings <- readDNAStringSet(D_4species_sequence)
strings <- DNAStringSet(c(D_4species_sequence))
strings
consensusMatrix(strings, baseOnly=TRUE)
consensusMatrix(strings, baseOnly=FALSE)
consensusMatrix(strings, baseOnly=TRUE)
sink("D_4species_matrix")
consensusMatrix(strings, baseOnly=TRUE)
sink()
SoxN_4species_sequence <- SoxN_mysp$dm_sequence
SoxNstrings <- DNAStringSet(c(SoxN_4species_sequence))
SoxNstrings
consensusMatrix(SoxNstrings, onlyBase=TRUE)
consensusMatrix(SoxNstrings, baseOnly=TRUE)
sink("SoxN_4species_matrix")
consensusMatrix(SoxNstrings, baseOnly=TRUE)
sink()
consensusMatrix(strings, baseOnly=TRUE, as.prob=TRUE)
