plot(D_IC, D_rate_all)
plot(D_IC, D_rate)
D_IC_rate_all <- lm(D_IC ~ D_rate_all)
summary(D_IC_rate_all)
plot(D_IC)
plot(D_IC)
lines(D_IC)
par(new=T)
plot(D_rate_all)
lines(D_rate_all)
par(new=F)
?array
?matrix
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
D_matrix
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
SoxN_matrix
plot(D_IC)
lines(D_IC)
par(new=TRUE)
plot(D_rate_nopse)
source('~/.active-rstudio-document')
plot(D_rate_nopse)
lines(D_rate_nopse)
plot(D_IC)
lines(D_IC)
par(new=TRUE)
plot(D_rate_nopse)
lines(D_rate_nopse)
D_IC_rate_nopse <- lm(D_IC ~ D_rate_nopse)
summary(D_IC_rate_nopse)
?function
;
??function
;
help(funtion)
help(function)
fix(bindingSiteLoss)
bg_freqs <- matrix(c(0.30319,0.20103,0.19882,0.29697), nrow=1, ncol=4, byrow=TRUE, dimnames=list(c("Frequency"), c("A", "C", "G", "T")))
bg_freqs
bg_freqs[A]
bg_freqs[A, ]
bg_freqs[, A]
bg_freqs[, "A"]
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
??log
??return
nt <- ("A", 3)
nt <- c("A", 3)
nt[1]
nt[2]
pos <- 3
nt1 <- "A"
nt2 <- "G"
calc_dS(nt1, nt2, pos, bg_freqs, D_matrix)
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
calc_dS(nt1, nt2, pos, bg_freqs, D_matrix)
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
calc_dS(nt1, nt2, pos, bg_freqs, D_matrix)
View(bg_freqs)
D_matrix
g_nt1 <- bg_freqs[, nt1]
g_nt1 = bg_freqs[, nt1]
drop(nt1)
rm(nt1)
rm(nt2)
rm(dS)
rm(pos)
g_nt1 <- bg_freqs[, nt1]
nt1 <- "A"
nt2 <- "G"
g_nt1 <- bg_freqs[, nt1]
g_nt2 <- bg_freqs[, nt2]
pos <- 3
f_nt1 <- f[pos, nt1]
f_nt2 <- f[pos, nt2]
dS <- log(f_nt2/g_nt2) - log(f_nt1/g_nt1)
dS
D_matrix
calc_dS(nt1, nt2, pos, bg_freqs, D_matrix)
?scan
?bioclite
??bioclite
?biostring
??biostring
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/positionSpecificSubst.R')
plot(D_rate_nopse)
lines(D_rate_nopse)
par(new=TRUE)
plot(D_IC)
lines(D_IC)
plot(D_IC, D_rate_nopse)
D_IC_rate_nopse <- lm(D_IC ~ D_rate_nopse)
summary(D_IC_rate_nopse)
summary(D_IC_rate)
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/positionSpecificSubst.R')
plot(SoxN_IC)
lines(SoxN_IC)
plot(SoxN_rate_nopse)
plot(SoxN_IC)
lines(SoxN_Ic)
lines(SoxN_IC)
par(new=TRUE)
plot(SoxN_rate_nopse)
lines(SoxN_rate_nopse)
SoxN_IC_rate_nopse <- lm(SoxN_IC ~ SoxN_rate_nopse)
summary(SoxN_IC_rate_nopse)
library(biostrings)
library(Biostrings)
?readLines()
con <- file("/home/sarah/utilities/play-1.2.7/sox_sites/analysis/Sequences/D_node3.fasta")
alignment <- readLines(con, n=14)
alignment
node3 <- DNAString(alignment[1, ])
alignment[1]
node3 <- DNAString(alignment[2])
node2 <- DNAString(alignment[4])
node1 <- DNAString(alignment[6])
mel <- DNAString(alignment[8])
sim <- DNAString(alignment[10])
yak <- DNAString(alignment[12])
pse <- DNAString(alignment[14])
mel
con <- file("/home/sarah/utilities/play-1.2.7/sox_sites/analysis/Sequences/site_alignments/Dichaete/5-HT1A.53C03.781.fasta")
alignment <- readLines(con)
node3 <- DNAString(alignment[3])
node2 <- DNAString(alignment[5])
node1 <- DNAString(alignment[7])
mel <- DNAString(alignment[9])
sim <- DNAString(alignment[11])
yak <- DNAString(alignment[14])
pse <- DNAString(alignment[15])
yak <- DNAString(alignment[13])
if (alignment[1] == "R") {
node3 <- reverseComplement(node3)
node2 <- reverseComplement(node2)
node1 <- reverseComplement(node1)
mel <- reverseComplement(mel)
sim <- reverseComplement(sim)
yak <- reverseComplement(yak)
# Read in alignments, store as biostrings
}
mel
con <- file("/home/sarah/utilities/play-1.2.7/sox_sites/analysis/Sequences/site_alignments/Dichaete/5-HT1A.53C10.2258.fasta")
alignment <- readLines(con)
node3 <- DNAString(alignment[3])
node2 <- DNAString(alignment[5])
node1 <- DNAString(alignment[7])
mel <- DNAString(alignment[9])
sim <- DNAString(alignment[11])
yak <- DNAString(alignment[13])
pse <- DNAString(alignment[15])
# If strand = R, take reverse complement
if (alignment[1] == "R") {
node3 <- reverseComplement(node3)
node2 <- reverseComplement(node2)
node1 <- reverseComplement(node1)
mel <- reverseComplement(mel)
sim <- reverseComplement(sim)
yak <- reverseComplement(yak)
pse <- reverseComplement(pse)
}
mel
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse))
align
align <- DNAStringSet(node3, node2, node1, mel, sim, yak, pse)
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse), width=8)
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse), start=NA, width=8)
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse), start="NA", width=8)
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse), start=c(0, 8, 16, 24, 32, 40, 48), width=8)
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse), start=c(0, 8, 16, 24, 32, 40, 48), width=(8, 8, 8, 8, 8, 8, 8)
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse), start=c(0, 8, 16, 24, 32, 40, 48), width=(8, 8, 8, 8, 8, 8, 8))
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse), start=c(0, 8, 16, 24, 32, 40, 48), width=(8,8,8,8,8,8,8))
align <- DNAStringSet(node3)
align <- DNAStringSet(node2)
align
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse)
)
align
?sapply
?tapply
?apply
?vector
?sapply
pse.len()
??length
length(mel)
nts <- [1:length(mel)]
nts <- c(1:length(mel))
nts
?sapply
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_list
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
rm(calc_dS)
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
library(Biostrings)
# Define background frequences of A, C, T and G (in this case, background Drosophila noncoding frequences from RSAT)
bg_freqs <- matrix(c(0.30319,0.20103,0.19882,0.29697), nrow=1, ncol=4, byrow=TRUE, dimnames=list(c("Frequency"), c("A", "C", "G", "T")))
# Define PWMs for sites of interest
D_matrix <- matrix(c(0.001,0.569,0.264,0.166, 0.007,0.797,0.071,0.125, 0.435,0.067,0.062,0.436, 0.001,0.001,0.057,0.941, 0.209,0.001,0.001,0.789, 0.001,0.001,0.997,0.001, 0.001,0.001,0.001,0.997, 0.125,0.199,0.235,0.441), nrow=8, ncol=4, byrow=TRUE, dimnames= list(c("1", "2", "3", "4", "5", "6", "7", "8"), c("A", "C", "G","T")))
SoxN_matrix <- matrix(c(0.355,0.217,0.274,0.155, 0.208,0.213,0.521,0.058, 0.253,0.284,0.399,0.064, 0.805,0.087,0.107,0.001, 0.304,0.614,0.001,0.081, 0.997,0.001,0.001,0.001, 0.997,0.001,0.001,0.001, 0.838,0.001,0.001,0.160, 0.312,0.082,0.502,0.104, 0.001,0.001,0.965,0.033), nrow=10, ncol=4, byrow=TRUE, dimnames= list(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"), c("A", "C", "G","T")))
# Define which PWM model to use
f <- D_matrix
# Read in alignments, store as biostrings
con <- file("/home/sarah/utilities/play-1.2.7/sox_sites/analysis/Sequences/site_alignments/Dichaete/5-HT1A.53C10.434.fasta")
alignment <- readLines(con)
node3 <- DNAString(alignment[3])
node2 <- DNAString(alignment[5])
node1 <- DNAString(alignment[7])
mel <- DNAString(alignment[9])
sim <- DNAString(alignment[11])
yak <- DNAString(alignment[13])
pse <- DNAString(alignment[15])
# If strand = R, take reverse complement
if (alignment[1] == "R") {
node3 <- reverseComplement(node3)
node2 <- reverseComplement(node2)
node1 <- reverseComplement(node1)
mel <- reverseComplement(mel)
sim <- reverseComplement(sim)
yak <- reverseComplement(yak)
pse <- reverseComplement(pse)
}
align <- DNAStringSet(c(node3, node2, node1, mel, sim, yak, pse))
dS_list <- 0
# Identify substitutions (what to do for gaps?)
find_subst <- function(col, dS_list) {
node3_nt <- node3[col]
node2_nt <- node2[col]
node1_nt <- node1[col]
mel_nt <- mel[col]
sim_nt <- sim[col]
yak_nt <- yak[col]
pse_nt <- pse[col]
if (pse_nt == node3_nt) {
} else {
nt1 <- node3_nt
nt2 <- pse_nt
pos <- col
dS <- calc_dS(nt1, nt2, pos, bg_freqs, D_matrix)
dS_list <- c(dS_list, dS)
}
if (yak_nt == node2_nt) {
} else {
nt1 <- node2_nt
nt2 <- yak_nt
pos <- col
dS <- calc_dS(nt1, nt2, pos, bg_freqs, D_matrix)
dS_list <- c(dS_list, dS)
}
if (sim_nt == node1_nt) {
} else {
nt1 <- node1_nt
nt2 <- sim_nt
pos <- col
dS <- calc_dS(nt1, nt2, pos, bg_freqs, D_matrix)
dS_list <- c(dS_list, dS)
}
if (mel_nt == node1_nt) {
} else {
nt1 <- node1_nt
nt2 <- mel_nt
pos <- col
dS <- calc_dS(nt1, nt2, pos, bg_freqs, D_matrix)
dS_list <- c(dS_list, dS)
}
return(dS_list)
}
calc_dS <- function(nt1, nt2, pos, bg_freqs, D_matrix) {
g_nt1 <- bg_freqs[, nt1]
g_nt2 <- bg_freqs[, nt2]
f_nt1 <- f[pos, nt1]
f_nt2 <- f[pos, nt2]
dS <- log(f_nt2/g_nt2) - log(f_nt1/g_nt1)
return(dS)
}
nts <- c(1:length(mel))
dS_list <- sapply(nts, find_subst, dS_list)
dS_list
node3_nt <- node3[col]
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
class(nt1)
class(nt2)
class(pos)
class(bg_freqs)
class(D_matrix)
calc_dS <- function(nt1, nt2, pos, bg_freqs, D_matrix) {
g_nt1 <- bg_freqs[, nt1]
g_nt2 <- bg_freqs[, nt2]
f_nt1 <- f[pos, nt1]
f_nt2 <- f[pos, nt2]
dS <- log(f_nt2/g_nt2) - log(f_nt1/g_nt1)
return(dS)
}
calc_dS("A", "C", 3, bg_freqs, D_matrix)
con <- file("/home/sarah/utilities/play-1.2.7/sox_sites/analysis/Sequences/site_alignments/Dichaete/5-HT1A.53C10.434.fasta")
alignment <- readLines(con)
node3 <- DNAString(alignment[3])
node2 <- DNAString(alignment[5])
node1 <- DNAString(alignment[7])
mel <- DNAString(alignment[9])
sim <- DNAString(alignment[11])
yak <- DNAString(alignment[13])
pse <- DNAString(alignment[15])
# If strand = R, take reverse complement
if (alignment[1] == "R") {
node3 <- reverseComplement(node3)
node2 <- reverseComplement(node2)
node1 <- reverseComplement(node1)
mel <- reverseComplement(mel)
sim <- reverseComplement(sim)
yak <- reverseComplement(yak)
pse <- reverseComplement(pse)
}
node3_nt <- node3[1]
node3_nt
node3
as.character(node3)
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
node3[0]
node3[1]
node3
node3[, 1]
node3[1, ]
node3[1]
node3_nt
as.character(node3_nt)
node3[1]
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_total
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_total
dS_counter
dS_avg = dS_total / dS_counter
dS_avg
D_matrix
node3
node2
node1
mel
sim
yak
pse
istrue <- (node3 == pse)
isture
istrue
istrue <- (yak == node2)
istrue
find_subst <- function(col, dS_total, dS_counter) {
}
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_avg
find_subst(1, 0, 0)
dS_list <- find_subst(1, 0, 0)
dS_list[1]
dS_list[2]
find_subst(2, 0, 0)
find_subst(3, 0, 0)
find_subst(4, -1.526252, 1.00000)
find_subst(5, -1.526252, 1.00000)
find_subst(6, -1.526252, 1.00000)
find_subst(7, -1.526252, 1.00000)
find_subst(8, -1.526252, 1.00000)
calc_dS("A", "G", 3, bg_freqs, D_matrix)
f_nt1
g_nt1
f_nt2
g_nt2
0.062/.19882
log(0.3118399)
?log
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_avg
dS_total
dS_counter
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_avg
dS_total
dS_counter
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_avg
dS_total
dS_counter
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_avg
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_avg
dS_total
dS_counter
?file.dir
??file.dir
??file
pwd
wd
??pwd
??working directory
??setwd
getwd
getwd()
setwd("/home/sarah/utilities/play-1.2.7/sox_sites/analysis/Sequences/site_alignments/Dichaete")
?cat
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
?regexpr
alignment
grepl(alignment[13], "-")
alignment[13]
gap <- "-"
grepl(alignment, gap)
grepl(alignment[13], gap)
grepl(gap, alignment[13])
myfile
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
??con
??connection
con
close(con)
con
?print
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
??type
?data.frame
dS_data <- data.frame(Name=character(),
Start=integer(),
dS=double(),
stringsAsFactors=FALSE)
dS_data$Name <- "testing"
dS_data["testing", , ]
?rbind
dS_data[1, ]
dS_data[1, ] <- c("testing", 10, -1.3)
dS_data
dS_data <- data.frame(Name=character(),
Start=integer(),
dS=double(),
stringsAsFactors=FALSE)
dS_data
dS_data <- rbind(dS_data, data.frame(Name="test", Start=700, dS=2.2))
dS_data
dS_data <- rbind(dS_data, data.frame(Name="mine", Start=23, dS=3.3))
dS_data
?sub
myfile
grep("Dichaete/(.+).fasta", myfile, value=TRUE)
sub("Dichaete/(.+).fasta", myfile)
sub("Dichaete/(.+).fasta", NA, myfile)
sub("Dichaete/(.+).fasta", "\\1", myfile)
sub("Dichaete/(.*)\\..*(.+)", "\\1", myfile)
myfile
sub("Dichaete/(.*)\\..*", "\\1", myfile)
sub(".*Dichaete/(.*)\\..*", "\\1", myfile)
sub(".*Dichaete/(.*)\\..*", "\\1", myfile)
sub(".*Dichaete/(.*)\\.(.*)\\..*", "\\1", myfile)
sub(".*Dichaete/(.*)\\.(.*)\\..*", "\\2", myfile)
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_data
summary(dS_data)
summary(dS_data$dS)
dist(dS_data$dS)
hist(dS_data$dS)
hist(dS_data$dS, main="Distribution of dS scores for Dichaete sites present in ancestral node", xlab="dS")
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/affinity_model.R')
dS_data
summary(dS_data)
hist(dS_data$dS)
hist(dS_data$dS, main="Distribution of dS scores for SoxN sites present in ancestral node", xlab="dS")
no_selection <- dS_data[dS_data$dS < -5]
no_selection <- dS_data[dS_data, dS_data$dS < -5]
dS_data[dS < -5.0]
dS_data[dS < -5.0, ]
dS_data
dS_data[dS_data$dS < -5.0, ]
low_scores <- dS_data[dS_data$dS < -5.0, ]
summary(low_scores)
high_score <- dS_data[dS_data$dS >= -0.5]
high_score <- dS_data[dS_data$dS >= -0.5, ]
summary(high_score)
summary(dS_data)
high_score <- dS_data[dS_data$dS >= -5.0, ]
summary(high_score)
hist(high_score)
hist(high_score$dS)
hist(low_scores$dS)
lea <- dS_data[dS_data$Name=="lea.28F02"]
lea <- dS_data[dS_data$Name=="lea.28F02", ]
lea
summary(lea)
??z-test
??ztest
