SoxN_msp <- dbReadTable(con, "soxn_msp")
SoxN_myp <- dbReadTable(con, "soxn_myp")
SoxN_syp <- dbReadTable(con, "soxn_syp")
SoxN_ms <- dbReadTable(con, "soxn_ms")
SoxN_my <- dbReadTable(con, "soxn_my")
SoxN_mp <- dbReadTable(con, "soxn_mp")
SoxN_sy <- dbReadTable(con, "soxn_sy")
SoxN_sp <- dbReadTable(con, "soxn_sp")
SoxN_yp <- dbReadTable(con, "soxn_yp")
SoxN_m <- dbReadTable(con, "soxn_m")
SoxN_s <- dbReadTable(con, "soxn_s")
SoxN_y <- dbReadTable(con, "soxn_y")
SoxN_p <- dbReadTable(con, "soxn_p")
SoxN_3species <- rbind(SoxN_msy, SoxN_msp, SoxN_myp, SoxN_syp)
SoxN_2species <- rbind(SoxN_ms, SoxN_my, SoxN_mp, SoxN_sy, SoxN_sp, SoxN_yp)
SoxN_1species <- rbind(SoxN_m, SoxN_s, SoxN_y, SoxN_p)
boxplot(SoxN_1species$d1_wscore, SoxN_2species$d1_wscore, SoxN_3species$d1_wscore, SoxN_mysp$dm_wscore, notch=TRUE, names=c("1", "2", "3", "4"))
boxplot(SoxN_1species$d1_wscore, SoxN_2species$d1_wscore, SoxN_3species$d1_wscore, SoxN_mysp$dm_wscore, notch=TRUE, names=c("1", "2", "3", "4"), col=brewer.pal(4, "YlGnBu"))
?boxplot
boxplot(SoxN_1species$d1_wscore, SoxN_2species$d1_wscore, SoxN_3species$d1_wscore, SoxN_mysp$dm_wscore, notch=TRUE, names=c("1", "2", "3", "4"), col=brewer.pal(4, "YlGnBu"), outline=FALSE)
boxplot(SoxN_1species$d1_wscore, SoxN_2species$d1_wscore, SoxN_3species$d1_wscore, SoxN_mysp$dm_wscore, notch=TRUE, names=c("1", "2", "3", "4"), col=brewer.pal(4, "YlGnBu"), outline=FALSE, ylim=c(4.0, 6.0))
boxplot(SoxN_1species$d1_wscore, SoxN_2species$d1_wscore, SoxN_3species$d1_wscore, SoxN_mysp$dm_wscore, notch=TRUE, names=c("1", "2", "3", "4"), col=brewer.pal(4, "YlGnBu"), outline=FALSE, ylim=c(4.0, 6.2))
boxplot(SoxN_1species$d1_wscore, SoxN_2species$d1_wscore, SoxN_3species$d1_wscore, SoxN_mysp$dm_wscore, notch=TRUE, names=c("1", "2", "3", "4"), col=brewer.pal(4, "YlGnBu"), outline=FALSE, ylim=c(4.0, 6.2), ylab="PWM score of site", xlab="Number of species in which site is present", main="PWM scores of predicted SoxN sites by site conservation")
text(c(3,4), 6, "*", cex=2)
boxplot(SoxN_1species$d1_wscore, SoxN_2species$d1_wscore, SoxN_3species$d1_wscore, SoxN_mysp$dm_wscore, notch=TRUE, names=c("1", "2", "3", "4"), col=brewer.pal(4, "YlGnBu"), outline=FALSE, ylim=c(4.0, 6.1), ylab="PWM score of site", xlab="Number of species in which site is present", main="PWM scores of predicted SoxN sites by site conservation")
text(c(3,4), 6, "*", cex=2)
plot(ratios, br_lens)
plot(br_lens, ratios)
br_lens <- c(.12, .29, 1.76)
plot(br_lens, ratios)
linreg <- lm(ratios ~ br_lens)
summary(linreg)
summary(linreg)
br_lens <- c(0.06629, 0.14007, 0.36588)
linreg <- lm(ratios ~ br_lens)
summary(linreg)
plot(br_lens, ratios)
?abline
plot(br_lens, ratios, ylab="Branch lengths (substitutions/site)", ylab="Ratio of conserved/total sites", main="Dichaete pairwise conservation")
?plot
x <- c(0.06629, 0.14007, 0.36588)
y <- c(0.8371, 0.7118, 0.3732)
reg <- lm(y ~ x)
summary(reg)
plot(x, y)
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site")
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(0.933869, -1.536952)
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(coef(reg))
text(0.1, 0.45, "R^2 = 0.9987", cex=1.2)
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(coef(reg))
text(0.1, 0.45, expression(paste(R, (", ^2, "), =0.9987)), cex=1.2)
text(0.1, 0.45, expression(paste("R", (", ^2, "), "=0.9987")), cex=1.2)
text(0.1, 0.45, expression(paste("R (", ^2, ") =0.9987")), cex=1.2)
text(0.1, 0.45, expression(paste("R (", ^2, ")=0.9987")), cex=1.2)
text(0.1, 0.45, expression(paste("(", R^2, ")=0.9987")), cex=1.2)
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(coef(reg))
text(0.1, 0.45, expression(paste("(", R^2, ")=0.9987"))
)
text(0.1, 0.45, expression(paste("(", R^2, "=0.9987"))
)
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(coef(reg))
text(0.1, 0.45, expression(paste("(", R^2, "=0.9987"))
)
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(coef(reg))
text(0.1, 0.45, expression(paste(", R^2, "=0.9987")), cex=1.2)
)
)
)
q
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(coef(reg))
text(0.1, 0.45, expression(paste(R^2, " = 0.9987")), cex=1.2)
text(0.35, 0.8, "D", cex=1.2, font=2)
y <- c(0.7653, 0.6059, 0.2404)
reg <- lm(y ~ x)
summary(reg)
plot(x, y)
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(coef(reg))
text(0.5, 0.35, expression(paste(R^2, " = 0.9923")))
text(0.05, 0.35, expression(paste(R^2, " = 0.9923")), cex=1.2)
text(0.1, 0.35, expression(paste(R^2, " = 0.9923")), cex=1.2)
plot(x, y, ylab="Ratio of conserved sites to total sites", xlab="Branch length (substitutions per site)")
abline(coef(reg))
text(0.1, 0.35, expression(paste(R^2, " = 0.9923")), cex=1.2)
text(0.34, 0.7, "SoxN", cex=1.2, font=2)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
summary(D_mp$turnover_rate)
summary(D_sy$turnover_rate)
summary(D_msp$turnover_rate)
??spearman
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
ncol(D_msyp)
ncol(D_m)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
D90_turnover
summary(D90_turnover)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
summary(D90_wscore)
cor.test(D90_turnover, D90_wscore, method="pearson", alternative="less")
fix(`D90_turnover`)
rm(D90_turnover)
rm(D90_wscore)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
cor.test(D90_turnover, D90_wscore, method="pearson", alternative="less")
cor.test(D90_turnover, D90_wscore, method="spearman", alternative="less")
cor.test(D90_turnover, D90_wscore, method="spearman", alternative="less", exact=FALSE)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
cor.test(D90_turnover, D90_wscore, method="spearman", alternative="less", exact=FALSE)
cor.test(D90_turnover, D90_wscore, method="spearman", alternative="two.sided", exact=FALSE)
cor.test(D90_turnover, D90_wscore, method="spearman", alternative="less", exact=FALSE)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
cor.test(D90_turnover, D90_wscore, method="spearman", alternative="less", exact=FALSE)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
cor.test(SoxN90_turnover, SoxN90_wscore, method="spearman", alternative="less", exact=FALSE)
cor.test(SoxN90_wscore, SoxN90_turnover, method="spearman", alternative="less", exact=FALSE)
cor.test(SoxN90_wscore, SoxN90_turnover, method="kendall", alternative="less", exact=FALSE)
cor.test(SoxN90_wscore, SoxN90_turnover, method="spearman", alternative="less", exact=FALSE)
summary(SoxN90_turnover)
summary(SoxN90_wscore)
hist(SoxN90_turnover)
plot(SoxN90_turnover, SoxN90_wscore)
plot(D90_turnover, D90_wscore)
plot(D90_wscore, D90_turnover)
plot(D90_turnover, D90_wscore)
plot(SoxN90_turnover, SoxN90_wscore)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
plot(SoxN90_turnover, SoxN90_wscore)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
plot(SoxN90_turnover, SoxN90_wscore)
summary(SoxN_my$turnover_rate)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
plot(SoxN90_turnover, SoxN90_wscore)
cor.test(SoxN90_turnover, SoxN90_wscore, method="spearman", alternative="less", exact=FALSE)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
plot(SoxN90_turnover, SoxN90_wscore)
summary(SoxN_my$wscore)
summary(SoxN_my$d1_wscore)
summary(SoxN_sy$d1_wscore)
summary(SoxN_mp$d1_wscore)
plot(D90_turnover, D90_wscore)
plot(SoxN90_turnover, SoxN90_wscore)
??hypergeometric
??chisquared
summary(D_1species)
summary(D_mp)
summary(D_mp$turnover_rate)
summary(D_mp)
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
Xsq$observed
Xsq$expected
Xsq$residuals
Xsq
Xsq$stdres
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
Xsq
Xsq$observed
Xsq$expected
Xsq$residuals
SoxN <- as.table(rbind(c(296,(492+16+9+11),(293+46+5+66+13+30+242+247+509+1455)), c(532,(877+53+24+19),(457+111+5+132+13+40+501+456+1061+2633)), c(485,(792+43+20+14),(436+94+11+98+6+29+395+385+840+2143))))
dimnames(SoxN) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("4-species", "3-species", "2-1-species"))
Xsq <- chisq.test(SoxN)
Xsq
SoxN <- as.table(rbind(c(296,(492+16+9+11+293+46+5+66+13+30+242+247+509+1455)), c(532,(877+53+24+19+457+111+5+132+13+40+501+456+1061+2633)), c(485,(792+43+20+14+436+94+11+98+6+29+395+385+840+2143))))
dimnames(SoxN) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("4-species", "others"))
Xsq <- chisq.test(SoxN)
Xsq
Xsq$expected
Xsq$observed
Xsq$residuals
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
Xsq <- chisq.test(D1)
Xsq
Xsq$residuals
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
Xsq <- chisq.test(SoxN1)
Xsq
Xsq$residuals
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
DDhssq
Ddhssq
Ddhssq$residuals
SoxNdhssq
SoxNdhssq$residuals
summary(D_msp$turnover_rate)
summary(D_my$turnover_rate)
summary(D_mp$turnover_rate)
summary(D_yp$turnover_rate)
source('~/utilities/play-1.2.7/sox_sites/analysis/turnover_rate.R')
View(D_Dunique)
drv <- dbDriver(RPostgreSQL)
drv <- dbDriver(PostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="sox_db")
D_common_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_common where tfsite.id=D_common.tfsite_id")
summary(D_common_turnover)
D_dunique_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_Dunique where tfsite.id=D_Dunique.tfsite_id")
D_soxnunique_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_SoxNunique where tfsite.id=D_SoxNunique.tfsite_id")
summary(D_dunique_turnover)
summary(D_soxnunique_turnover)
boxplot(D_common_turnover, D_dunique_turnover, D_soxnunique_turnover, notch=TRUE)
hist(D_common_turnover)
View(D_dunique_turnover)
boxplot(D_common_turnover)
boxplot(D_dunique_turnover)
D_common_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_common where tfsite.id=D_common.tfsite_idand turnover_rate >= 0")
D_common_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_common where tfsite.id=D_common.tfsite_i and tfsite.turnover_rate >= 0")
D_common_turnover <- dbGetQuery(con, "select turnover_rate from tfsite, D_common where tfsite.id=D_common.tfsite_id and tfsite.turnover_rate >= 0")
View(D_common_turnover)
hist(D_common_turnover)
hist(D_common_turnover$turnover_rate)
hist(D_dunique_turnover$turnover_rate)
hist(D_common_turnover$turnover_rate)
hist(D_soxnunique_turnover$turnover_rate)
wilcox.test(D_common_turnover$turnover_rate, D_dunique_turnover$turnover_rate)
D_turn<- as.table(rbind(c(619,41,47,6), c(1047,52,97,5), c(1089,64,64,6)))
dimnames(D) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("0", "1/6", "1/4", "2/6"))
Dsq <- chisq.test(D)
Dsq
Dsq$observed
Dsq$expected
Dsq$residuals
D_turn<- as.table(rbind(c(619,41,47,6), c(1047,52,97,5), c(1089,64,64,6)))
dimnames(D_turn) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("0", "1/6", "1/4", "2/6"))
Dsq <- chisq.test(D_turn)
Ds
Dsq
Dsq$expected
Dsq$observed
Dsq$residuals
??chisquare
Dsq <- chisq.test(D_turn, simulate.p.value=TRUE)
Dsq
SoxN_turn<- as.table(rbind(c(1081,66,112,18), c(1866,136,243,18), c(1713,106,192,17)))
dimnames(SoxN_turn) <- list(binding=c("Dunique", "SoxNunique", "common"),
cons=c("0", "1/6", "1/4", "2/6"))
SoxNsq <- chisq.test(SoxN_turn)
SoxNsq
SoxNsq$observed
SoxNsq$expected
SoxNsq$residuals
source('~/utilities/play-1.2.7/sox_sites/analysis/chisquare.R')
sink("chisq_results.txt")
Dsq
Ds$residuals
Dsq$residuals
SoxNsq
SoxNsq$residuals
D1sq
D1sq$residuals
SoxN1sq
SoxN1sq$residuals
Ddhssq
Ddhssq$residuals
SoxNdhssq
SoxNdhssq$residuals
sink()
??barplot
barplot(c(261/1815,269/1815,183/1815,1102/1815))
??barplot
?matrix
?barplot
?matrix
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
barplot(Dichaete_matrix)
barplot(Dichaete_matrix, beside=TRUE)
?barplot
?brewer
??Brewer
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
??brewer
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, YlOrRd))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "YlOrRd"))
display.brewer.all()
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Paired"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Dark"))
display.brewer.all()
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set2"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set3"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Dark2"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set3"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites")
?legend
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend=c("Dichaete only", "SoxN only", "Common"))
?legend
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend=c("Dichaete only", "SoxN only", "Common"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend(1, 0.5, c("Dichaete only", "SoxN only", "Common")))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites")
legend(1, 0.5, c("Dichaete only", "SoxN only", "Common"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend=c("Dichaete only", "SoxN only", "Common"))
?barplot
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(1, 0.5))
?barplot
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = "topleft"))
)
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = "topleft")))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 1, y=0.5)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 1.5, y=0.5)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.5)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=2)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=1)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.5)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Set1"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "YlOrRd"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
??brewere
display.brewer.all()
barplot(Dichaete_matrix, beside=TRUE, col=brewer.pal(3, "Spectral"), ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
newpal <- brewer.pal(6, "Spectral")
display.brewer.newpal()
newpal
barplot(Dichaete_matrix, beside=TRUE, col=newpal, ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[0-3], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[0], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[1], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[1-3], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[1,3], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
barplot(Dichaete_matrix, beside=TRUE, col=newpal[1:3], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x = 5, y=0.6)))
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
barplot(SoxN_matrix, beside=TRUE, col=newpal[4:6], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x=5, y=0.6)))
barplot(SoxN_matrix, beside=TRUE, col=newpal[6:4], ylab="Proportion of total sites", legend.text=c("Dichaete only", "SoxN only", "Common"), args.legend=(list(x=5, y=0.6)))
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/make_barplots.R')
boxplot(D_transcomp, beside=TRUE, col=newpal, ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal, ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1:3], ylab="Proportion of total sites")
newpal <- brewer.pal(4, "Spectral")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
newpal
newpal <- brewer.pal(3, "Spectral")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
display.brewer.all()
newpal <- brewer.pal(2, "YlOrRd")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1][3], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1,3, ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1,3], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal, ylab="Proportion of total sites")
newpal <- brewer.pal(4, "Spectral")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites")
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites", legend.text=c("Transcompensation", "No transcompensation"), args.legend=list(x=5, y=0.6)))
barplot(D_transcomp, beside=TRUE, col=newpal[1:2], ylab="Proportion of total sites", legend.text=c("Transcompensation", "No transcompensation"), args.legend=list(x=5, y=0.6))
barplot(nrow(D_msyp), nrow(D_3species), nrow(D_2species), nrow(D_1species))
?barplot
sites <- c(nrow(D_msyp), nrow(D_3species), nrow(D_species), nrow(D_1species))
sites <- c(nrow(D_msyp), nrow(D_3species), nrow(D_2species), nrow(D_1species))
barplot(sites, beside=TRUE)
?barplot
sites <- c(nrow(D_1species), nrow(D_2species), nrow(D_3species), nrow(D_msyp))
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites")
??brewer
display.brewer.all()
library("RColorBrewer")
display.brewer.all()
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites", col=brewer.pal(4, "BuPu"))
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites", col=brewer.pal(4, "YlOrRd"))
sites <- c(nrow(SoxN_1species), nrow(SoxN_2species), nrow(SoxN_3species), nrow(SoxN_mysp))
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites", col=brewer.pal(4, "YlBuGn"))
display.brewer.all()
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of Dichaete sites", col=brewer.pal(4, "YlGnBu"))
barplot(sites, beside=TRUE, ylab="Number of sites", names.arg=c("1 species", "2 species", "3 species", "4 species"), main="Conservation of SoxN sites", col=brewer.pal(4, "YlGnBu"))
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="sox_db")
D_overlap <- dbReadTable(con, "D_overlap")
D_overlap <- dbReadTable(con, "d_overlap")
View(D_overlap)
D_proximal <- dbReadTable(con, "d_proximal")
D_distal <- dbReadTable(con, "d_distal")
SoxN_overlap <- dbReadTable(con, "soxn_overlap")
SoxN_proximal <- dbReadTable(con, "soxn_proximal")
SoxN_distal <- dbReadTable(con, "soxn_distal")
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1, notch=TRUE)
wilcox.test(D_overlap$wscore1, D_proximal$wscore1)
wilcox.test(D_proximal$wscore1, D_distal$wscore1)
boxplot(SoxN_overlap$wscore1, SoxN_proximal$wscore1, SoxN_distal$wscore1)
boxplot(SoxN_overlap$wscore1, SoxN_proximal$wscore1, SoxN_distal$wscore1, notch=TRUE)
wilcox.test(SoxN_proximal$wscore1, SoxN_overlap$wscore1)
wilcox.test(SoxN_proximal$wscore1, SoxN_distal$wscore1)
D_overlap <- dbReadTable(con, "D_overlap")
D_overlap <- dbReadTable(con, "d_overlap")
D_proximal <- dbReadTable(con, "d_proximal")
D_distal <- dbReadTable(con, "d_distal")
SoxN_overlap <- dbReadTable(con, "soxn_overlap")
SoxN_proximal <- dbReadTable(con, "soxn_proximal")
SoxN_distal <- dbReadTable(con, "soxn_distal")
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1, notch=TRUE)
wilcox.test(D_proximal$wscore, D_overlap$wscore)
wilcox.test(D_proximal$wscore1, D_overlap$wscore1)
wilcox.test(D_proximal$wscore1, D_distal$wscore1)
boxplot(SoxN_overlap$wscore1, SoxN_proximal$wscore1, SoxN_distal$wscore1, notch=TRUE)
wilcox.test(SoxN_proximal$wscore1, SoxN_distal$wscore1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscor1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1)
boxplot(D_overlap$wscore1, D_proximal$wscore1, D_distal$wscore1, notch=TRUE)
wilcox.test(D_proximal$wscore1, D_overlap$wscore1)
boxplot(D_overlap$wscore2, D_proximal$wscore2, D_distal$wscore2, notch=TRUE)
boxplot(D_overlap$wscore2, D_proximal$wscore2, D_distal$wscore2)
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
View(D_overlap_4sp)
D_overlap_3sp <- c(D_overlap_msy, D_overlap_msp, D_overlap_myp, D_overlap_syp)
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
fix(D_overlap_3sp)
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
View(D_overlap_p)
View(D_overlap_y)
View(D_overlap_s)
View(D_overlap_m)
source('~/utilities/play-1.2.7/sox_sites/analysis/homotypic_clustering_conservation.R')
View(D_overlap)
D_prox_4sp <- dbGetQuery(con, "select distinct dm_id from D_proximal, D_msyp where D_proximal.id1=D_msyp.dm_id OR D_proximal.id2=D_msyp.dm_id")
D_homotypic <- as.table(rbind(c(nrow(D_overlap_4sp), D_overlap_3sp, D_overlap_2sp, D_overlap_1sp), c(nrow(D_prox_4sp), D_prox_3sp, D_prox_2sp, D_prox_1sp), c(nrow(D_dist_4sp), D_dist_3sp, D_dist_2sp, D_dist_1sp)))
D_prox_4sp <- dbGetQuery(con, "select distinct dm_id from D_proximal, D_msyp where D_proximal.id1=D_msyp.dm_id OR D_proximal.id2=D_msyp.dm_id")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="sox_db")
D_prox_4sp <- dbGetQuery(con, "select distinct dm_id from D_proximal, D_msyp where D_proximal.id1=D_msyp.dm_id OR D_proximal.id2=D_msyp.dm_id")
D_prox_msy <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_msy where D_proximal.id1=D_msy.d1_id OR D_proximal.id2=D_msy.d1_id")
D_prox_msp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_msp where D_proximal.id1=D_msp.d1_id OR D_proximal.id2=D_msp.d1_id")
D_prox_myp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_myp where D_proximal.id1=D_myp.d1_id OR D_proximal.id2=D_myp.d1_id")
D_prox_syp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_syp where D_proximal.id1=D_syp.d1_id OR D_proximal.id2=D_syp.d1_id")
D_prox_3sp <- nrow(D_prox_msy) + nrow(D_prox_msp) + nrow(D_prox_myp) + nrow(D_prox_syp)
D_prox_ms <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_ms where D_proximal.id1=D_ms.d1_id OR D_proximal.id2=D_ms.d1_id")
D_prox_my <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_my where D_proximal.id1=D_my.d1_id OR D_proximal.id2=D_my.d1_id")
D_overlap_s <- dbGetQuery(con, "select distinct d1_id from D_overlap, D_s where D_overlap.id1=D_s.d1_id OR D_overlap.id2=D_s.d1_id")
D_prox_mp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_mp where D_proximal.id1=D_mp.d1_id OR D_proximal.id2=D_mp.d1_id")
D_prox_sy <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_sy where D_proximal.id1=D_sy.d1_id OR D_proximal.id2=D_sy.d1_id")
D_prox_sp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_sp where D_proximal.id1=D_sp.d1_id OR D_proximal.id2=D_sp.d1_id")
D_prox_yp <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_yp where D_proximal.id1=D_yp.d1_id OR D_proximal.id2=D_yp.d1_id")
D_prox_2sp <- nrow(D_prox_ms) + nrow(D_prox_my) + nrow(D_prox_mp) + nrow(D_prox_sy) + nrow(D_prox_sp) + nrow(D_prox_yp)
D_prox_m <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_m where D_proximal.id1=D_m.d1_id OR D_proximal.id2=D_m.d1_id")
D_prox_s <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_s where D_proximal.id1=D_s.d1_id OR D_proximal.id2=D_s.d1_id")
D_prox_y <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_y where D_proximal.id1=D_y.d1_id OR D_proximal.id2=D_y.d1_id")
D_prox_p <- dbGetQuery(con, "select distinct d1_id from D_proximal, D_p where D_proximal.id1=D_p.d1_id OR D_proximal.id2=D_p.d1_id")
D_prox_1sp <- nrow(D_prox_m) + nrow(D_prox_s) + nrow(D_prox_y) + nrow(D_prox_p)
D_homotypic <- as.table(rbind(c(nrow(D_overlap_4sp), D_overlap_3sp, D_overlap_2sp, D_overlap_1sp), c(nrow(D_prox_4sp), D_prox_3sp, D_prox_2sp, D_prox_1sp), c(nrow(D_dist_4sp), D_dist_3sp, D_dist_2sp, D_dist_1sp)))
d
D_dist_4sp <- dbGetQuery(con, "select distinct dm_id from D_distal, D_msyp where D_distal.id1=D_msyp.dm_id OR D_distal.id2=D_msyp.dm_id")
View(D_1species)
View(D_2species)
View(D_3species)
D_dist_3sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_3species where D_dista.id1=D_3species.d1_id")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="sox_db")
D_dist_3sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_3species where D_dista.id1=D_3species.d1_id")
D_dist_3sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_3species where D_distal.id1=D_3species.d1_id")
View(D_distal)
D_distal <- dbReadTable(con, "d_distal")
SoxN_distal <- dbReadTable(con, "soxn_distal")
D_dist_4sp <- dbGetQuery(con, "select distinct dm_id from D_distal, D_msyp where D_distal.id1=D_msyp.dm_id")
D_dist_3sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_3species where D_distal.id1=D_3species.d1_id")
D_dist_2sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_2species where D_distal.id1=D_2species.d1_id")
D_dist_1sp <- dbGetQuery(con, "select distinct d1_id from D_distal, D_1species where D_distal.id1=D_1species.d1_id")
D_homotypic <- as.table(rbind(c(nrow(D_overlap_4sp), D_overlap_3sp, D_overlap_2sp, D_overlap_1sp), c(nrow(D_prox_4sp), D_prox_3sp, D_prox_2sp, D_prox_1sp), c(nrow(D_dist_4sp), nrow(D_dist_3sp), nrow(D_dist_2sp), nrow(D_dist_1sp)))
dimnames(D_homotypic) <- list(position=c("Overlap", "Proximal", "Distal"),
D_homotypic <- as.table(rbind(c(nrow(D_overlap_4sp), D_overlap_3sp, D_overlap_2sp, D_overlap_1sp), c(nrow(D_prox_4sp), D_prox_3sp, D_prox_2sp, D_prox_1sp), c(nrow(D_dist_4sp), nrow(D_dist_3sp), nrow(D_dist_2sp), nrow(D_dist_1sp))))
dimnames(D_homotypic) <- list(position=c("Overlap", "Proximal", "Distal"),
cons=c("1 species", "2 species", "3 species", "4 species"))
args(chisq)
??chisq
chisq.test(D_homotypic)
D_homotypic_test <- chisq.test(D_homotypic)
D_homotypic_test$expected
D_homotypic_test$observed
D_homotypic_test$residuals
setwd("~/utilities/play-1.2.7/sox_sites/analysis")
library(biostrings)
library(Biostrings)
View(SoxN_matrix)
View(D_msyp)
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/newConsensusMatrix.R')
source('~/utilities/play-1.2.7/sox_sites/analysis/Code/R_scripts/newConsensusMatrix.R')
D_4species_matrix
cd Stats
setwd("~/utilities/play-1.2.7/sox_sites/analysis/Stats")
sink("D_4species_matrix")
D_4species_matrix
sink()
sink("SoxN_4_species_matrix")
SoxN_4species_matrix
sink()
sink("SoxN_4species_matrix")
SoxN_4species_matrix
sink()
D_4species_seqs
fix(SoxN_4species_seqs)
